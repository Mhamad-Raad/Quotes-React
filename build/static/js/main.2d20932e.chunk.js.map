{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/Layout.module.css","hooks/use-http.js","lib/api.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","Pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","Pages/NewQuote.js","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","Pages/QuoteDetails.js","components/layout/MainNavigation.js","components/layout/Layout.js","Pages/NotFound.js","App.js","index.js"],"names":["module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","QuoteItem","props","className","classes","item","text","author","to","QuoteList","quotes","ascending","location","useLocation","navigate","useNavigate","isASCSorting","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","Quotes","useHtpp","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","authorInputRef","useRef","textInputRef","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuotes","HighlightedQuote","NewCommentForm","commentTextRef","quoteID","useParams","onAddedComment","submitFormHandler","alert","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","loadedComments","addedCommentHandler","QuotesDetails","params","JSXDemo","path","element","MainNavigation","header","logo","nav","isActive","active","Layout","CSS","main","NotFound","App","replace","exact","AllQuotes","NewQuote","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2d20932e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__rDspp\",\"loading\":\"QuoteForm_loading__2JuOX\",\"control\":\"QuoteForm_control__LOsmY\",\"actions\":\"QuoteForm_actions__Wr4hc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2j0Is\",\"logo\":\"MainNavigation_logo__2Pd7d\",\"nav\":\"MainNavigation_nav__2CKz7\",\"active\":\"MainNavigation_active__2oCcU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2r4ip\",\"loading\":\"NewCommentForm_loading__103vG\",\"control\":\"NewCommentForm_control__ItQW8\",\"actions\":\"NewCommentForm_actions__379Si\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3uS9d\",\"sorting\":\"QuoteList_sorting__3PL9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__34NUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2BJ9o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__20tUi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1oKcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2xHRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2TGMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3yKAj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1vT1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__3Sxkf\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://quotes-react-440b1-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  const query = new URLSearchParams(location.search);\n  \n  const isASCSorting = query.get('sort') === 'asc';\n  \n  const sortedQuotes = sortQuotes(props.quotes, isASCSorting);\n\n  const clickHandler = () => {\n    navigate('/Quotes?sort=' + (isASCSorting ? 'desc' : 'asc'));\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={clickHandler}>Sort {isASCSorting ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to={'/NewQuote'} className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import useHtpp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\nconst Quotes = () => {\r\n  const { sendRequest, status, data: loadedQuotes, error } = useHtpp(\r\n    getAllQuotes,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n       <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered focused'>{error}</p>;\r\n  }\r\n\r\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return (\r\n    <QuoteList quotes={ loadedQuotes } />\r\n  );\r\n}\r\n\r\nexport default Quotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef } from 'react';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    // optional: Could validate here\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  return (\n    <>\n   <Card>\n        <form className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n      </>\n  );\n};\n\nexport default QuoteForm;\n","import { useNavigate } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHtpp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api'; \r\n\r\n\r\n\r\n\r\nconst NewQuotes = () => {\r\n  const navigate = useNavigate();\r\n  const { sendRequest, status } = useHtpp(addQuote);\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      navigate('/Quotes');\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n    navigate('/quotes');\r\n  };\r\n  return (\r\n    <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n  );\r\n}\r\n\r\nexport default NewQuotes;","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n  const params = useParams();\n  const quoteID = params.quoteID;\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, onAddedComment, error]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    if (commentTextRef.current.value === '') {\n      alert('The Area cannot be empty');\n      return;\n    }\n    sendRequest({\n      commentData: { text: commentTextRef.current.value },\n      quoteId: quoteID,\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n          )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport classes from './Comments.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const parms = useParams();\n  const { quoteID } = parms;\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteID);\n  }, [sendRequest, quoteID]);\n  \n  useEffect(() => {\n    sendRequest(quoteID);\n  }, [sendRequest, quoteID]);\n\n  let comments;\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n      );\n  }\n\n  if (status === 'completed') {\n    comments = <CommentsList comments={ loadedComments } />;\n  }\n  \n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n \n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm onAddedComment={ addedCommentHandler } />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { useParams, Link, Route, Routes } from \"react-router-dom\";\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport Comments from '../components/comments/Comments';\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport { useEffect } from 'react';\r\n\r\nconst QuotesDetails = () => {\r\n  const params = useParams();\r\n\r\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\r\n  const { quoteID } = params;\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteID);\r\n  }, [sendRequest, quoteID]);\r\n\r\n  const quote = loadedQuote;\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered focused'>{error}</p>;\r\n  }\r\n\r\n  if (!quote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  const JSXDemo = <div className=\"centered\">\r\n              <Link className=\"btn--flat\" to={`/quotes/${params.quoteID}/comments`}>\r\n                Load Comments\r\n              </Link>\r\n            </div>\r\n\r\n  return (\r\n    <div>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />     \r\n        <Routes>\r\n          <Route path={`/`} element={JSXDemo} />\r\n          <Route path={`/comments`} element={<Comments />} />\r\n        </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuotesDetails;","import classes from './MainNavigation.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/Quotes\" className={({ isActive }) => isActive? classes.active : ''}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/NewQuote\"  className={({ isActive }) => isActive? classes.active : ''}>\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default MainNavigation;\r\n","import CSS from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\nimport { Fragment } from 'react';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={CSS.main}>\r\n        {props.children}\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Layout;","const NotFound = () => {\r\n  return (\r\n    <div className='centered'>\r\n      <h1>404</h1>\r\n      <p>Page not found</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import { Routes, Route, Navigate } from \"react-router-dom\";\nimport AllQuotes from './Pages/AllQuotes';\nimport NewQuote from './Pages/NewQuote';\nimport QuoteDetail from './Pages/QuoteDetails';\nimport Layout from './components/layout/Layout';\nimport NotFound from \"./Pages/NotFound\";\n\n\nfunction App() {\n  return (\n    <>\n      <Layout>\n        <Routes>\n          <Route path=\"/\" element={<Navigate replace to={'./Quotes'} />} />\n          <Route path=\"/Quotes\" exact element={<AllQuotes />} />\n          <Route path='/Quotes/:quoteID/*' element={<QuoteDetail />} />\n          <Route path=\"/NewQuote\" element={<NewQuote />} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n     </Layout>\n\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>);\n"],"sourceRoot":""}